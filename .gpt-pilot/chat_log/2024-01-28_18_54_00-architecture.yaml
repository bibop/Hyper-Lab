endpoint: OPENAI
model: gpt-4-1106-preview
messages:
- role: system
  content: You are an experienced software architect. Your expertise is in creating an architecture for an MVP (minimum viable
    products) for Apps that can be developed as fast as possible by using as many ready-made technologies as possible.
- role: user
  content: 'You are working in a software development agency and a project manager approached you telling you that you''re
    assigned to work on a new project. You  are working on a App called "AI_HyperLab" and you need to create specifications
    on what technologies should be used in this project.


    Here is a high level description of "AI_HyperLab":

    ```

    "Hyper-Lab" is an innovative full-stack web application designed for managing AI projects using an autogen architecture.
    It combines a modern graphical user interface with advanced functionalities tailored for creating and managing specialized
    Autogen Agents.

    Enhanced Key Features and Functionalities:

    * Dynamic Creation of Specialized Autogen Agents: Up to eight agents are dynamically created for each project based on
    user-inputted prompts, including specific roles such as a ''boss'' and a ''critic''.

    * AI-Generated Agent Images: On user request, the software is capable of generating images for each agent, reflecting
    their functions and roles within the project. This visual representation adds a layer of intuitiveness and personalization
    to the user experience.

    * RAG Functionality: Each agent is equipped with Retrievable and Generative capabilities, enabling them to retain memory
    and learn incrementally, improving their performance over time.

    * Persistent and Concurrent Interactions: The platform ensures that interactions between agents are continuous and can
    occur simultaneously across multiple sessions.

    * Graphical User Interface (GUI): The GUI displays each agent in individual text boxes, complete with the agent''s name,
    specialization, and their AI-generated or user-uploaded image.

    * User Authentication and Real-Time Collaboration: Various access levels for enhanced security, along with features supporting
    real-time collaboration on AI projects.

    * Strict Adherence to Autogen Architecture: Exclusively utilizes Autogen architecture without integrating additional AI
    services or frameworks.

    * Responsive and Multilingual Design: The application is mobile-responsive and supports multiple languages, catering to
    a global audience.

    * Performance Metrics and Documentation: While specific performance metrics are yet to be established, the application
    is geared towards efficiency and user-friendliness. A detailed user manual will be provided in English.

    References and Resources for Autogen:

    * Autogen Architecture Overview: Microsoft Autogen Blog

    * Agent AutoBuild Example: Microsoft Autogen Blog - Agent AutoBuild

    * Detailed Articles on Autogen: Available at Microsoft Autogen Blog.


    ```




    Now, based on the projects details, think step by step and list the names of the technologies that will be used by your
    development team to create the app "AI_HyperLab".

    Do not give any subjective thoughts or options, give exact technologies, for example:

    Instead of ["D3.js or other suitable charting library", "axios or other http client library"] answer with ["D3.js", "axios"].


    You do not need to list any technologies related to automated tests (like Jest, Cypress, Mocha, Selenium, etc) or  any
    technologies related to deployment (like Heroku).


    **Project Technology Guidelines**

    Relevance: Only include technologies that are essential and will be actively used in the project. Avoid mentioning any
    technologies that are not required. For example, don''t suggest MongoDB if database is not needed for project.

    Compatibility: Ensure that the listed technologies are compatible with each other. Exclude any technologies that cannot
    be integrated or used in conjunction with others. For example, Pandas (Python library) and Node.js can''t be used together.
    Another example is MongoDB (NoSQL database) and MySQL (SQL database) shouldn''t be used together unless that is specified
    in project description.

    Technology Preferences: In scenarios where multiple technology options are available for a specific project component,
    prioritize the following preferred technologies:

    - Node.js,

    - MongoDB,

    - PeeWee,

    - Bootstrap,

    - HTML,

    - CSS3,

    - cronjob,

    - Socket.io


    **IMPORTANT**

    Do not use, create or suggest any microservices. Create strictly monolithic application even if in some prompts I might
    suggest microservices might be better or more desired solution. Do your best to find a solution to any requirement without
    using microservices.'
- role: user
  content: "**IMPORTANT**\nYou must respond with ONLY the JSON object, with NO additional text or explanation.\n\nHere is\
    \ the schema for the expected JSON object:\n```json\n{\n    \"technologies\": {\n        \"type\": \"array\",\n      \
    \  \"description\": \"List of technologies.\",\n        \"items\": {\n            \"type\": \"string\",\n            \"\
    description\": \"technology\"\n        }\n    }\n}\n```\n\n"
response: "```json\n{\n    \"technologies\": [\n        \"Node.js\",\n        \"Express\",\n        \"MongoDB\",\n       \
  \ \"Mongoose\",\n        \"jsonwebtoken\",\n        \"Passport.js\",\n        \"bcryptjs\",\n        \"Socket.io\",\n  \
  \      \"React\",\n        \"Redux\",\n        \"axios\",\n        \"Bootstrap\",\n        \"HTML\",\n        \"CSS3\",\n\
  \        \"cron\",\n        \"i18next\",\n        \"TensorFlow.js\",\n        \"sharp\"\n    ]\n}\n```"
